trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

parameters:
  - name: domain
    displayName: Domain Name
    type: string
    values:
      - sales
      - associates
      - accounting
      - finance
      - customer
      - nonedw
      - shared

  - name: sourceKeyVaultName
    displayName: Source Key Vault Name
    type: string
    default: 'source-keyvault-name'

  - name: targetKeyVaultName
    displayName: Target Key Vault Name
    type: string
    default: 'target-keyvault-name'

variables: 
  - name: pool
    value: 'ubuntu-latest'

pool:
  vmImage: $(pool)

stages:
  # Build Stage (Prepare the migration script and publish it)
  - stage: Build
    displayName: 'Build'
    jobs:
      - job: publishJob
        displayName: 'Publish migration script'
        steps:
          # Step to copy the migration script to the artifact staging directory
          - task: CopyFiles@2
            displayName: 'Copy migration.ps1 to artifact staging'
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: 'migration.ps1'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          # Step to publish the artifact
          - task: PublishPipelineArtifact@1
            displayName: 'Publish Artifact'
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifactName: keyvault_migration

  # Deploy Stage (Run migration script in the selected environment)
  - stage: Deploy
    dependsOn: Build
    displayName: "Deploy"
    jobs:
      - job: runMigration
        displayName: 'Run KeyVault Migration Script'
        steps:
          # Step to download the artifact published during the Build stage
          - task: DownloadPipelineArtifact@2
            displayName: 'Download migration.ps1'
            inputs:
              artifact: keyvault_migration
              path: '$(Pipeline.Workspace)'

          # Step to run the PowerShell migration script using Azure CLI
          - task: AzureCLI@2
            displayName: 'Run PowerShell Script for Migration'
            inputs:
              azureSubscription: 'data-analytics-platform-edw-prod'  # Replace with your actual service connection
              scriptType: pwsh
              scriptLocation: scriptPath
              scriptPath: '$(Pipeline.Workspace)/migration.ps1'
              arguments: '"${{ parameters.sourceKeyVaultName }}" "${{ parameters.targetKeyVaultName }}"'
