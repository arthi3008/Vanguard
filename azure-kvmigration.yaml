trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

parameters:
  - name: env
    displayName: Environment
    default: dev
    type: string
    values:
      - dev
      - qa
      - prod
      - prod_dr

  - name: domain
    displayName: Azure Data Factory
    type: string
    default: nonedw
    values:
      - all
      - accounting
      - associates
      - customer
      - finance
      - nonedw
      - sales

  - name: sourceKeyVaultName
    displayName: Source Key Vault Name
    type: string
    default: 'source-keyvault-name'

  - name: targetKeyVaultName
    displayName: Target Key Vault Name
    type: string
    default: 'target-keyvault-name'

variables:
  - name: pool
    value: 'ubuntu-latest'

  - name: azureSubscription
    ${{ if eq(parameters.env, 'qa') }}:
      value: 'vanguard-nonprod-azuredevops.com'
    ${{ else }}:
      value: 'vanguard-nonprod-azuredevops.com'

pool:
  vmImage: $(pool)

stages:
  - stage: Build
    displayName: 'Build'
    jobs:
      - job: publishJob
        displayName: 'Publish migration.ps1'
        steps:
          - task: CopyFiles@2
            displayName: 'Copy migration.ps1 to artifact staging'
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: 'migration.ps1'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishPipelineArtifact@1
            displayName: 'Publish Artifact'
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifactName: keyvault_migration

  - stage: Deploy
    displayName: 'Deploy'
    dependsOn: Build
    jobs:
      - job: runMigration
        displayName: 'Run KeyVault Migration Script'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download migration.ps1'
            inputs:
              artifact: keyvault_migration
              path: '$(Pipeline.Workspace)'

          - task: AzureCLI@2
            displayName: 'Run PowerShell Script'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: pwsh
              scriptLocation: scriptPath
              scriptPath: '$(Pipeline.Workspace)/migration.ps1'
              arguments: '"${{ parameters.sourceKeyVaultName }}" "${{ parameters.targetKeyVaultName }}"'
